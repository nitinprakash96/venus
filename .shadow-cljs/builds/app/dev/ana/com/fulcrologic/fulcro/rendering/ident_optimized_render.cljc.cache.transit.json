["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.ident_optimized_render');\n/**\n * Checks the given `idents` and returns a subset of them where the data they refer to has changed\n * between `old-state` and `new-state`.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$dirty_table_entries(old_state,new_state,idents){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,ident){\nif((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_state,ident) === cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_state,ident))){\nreturn result;\n} else {\nreturn cljs.core.cons(ident,result);\n}\n}),cljs.core.List.EMPTY,idents);\n});\n/**\n * Uses the component's query and the current application state to query for the current value of that component's\n *   props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n *   component-local state).\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_component_BANG_(app__$1,ident,c){\nif(cljs.core.truth_((function (){var and__4210__auto__ = c;\nif(cljs.core.truth_(and__4210__auto__)){\nreturn ident;\n} else {\nreturn and__4210__auto__;\n}\n})())){\nvar map__61100 = app__$1;\nvar map__61100__$1 = cljs.core.__destructure_map(map__61100);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61100__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar state_map = cljs.core.deref(state_atom);\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(c,state_map);\nvar q = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,query])], null);\nvar prior_computed = (function (){var or__4212__auto__ = com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1(c);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar data_tree = (cljs.core.truth_(query)?com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(q,state_map,state_map):null);\nvar new_props = com.fulcrologic.fulcro.components.computed(cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,ident),prior_computed);\nif(cljs.core.truth_(query)){\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,42,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Query was empty. Refresh failed for \",cljs.core.type(c)], null);\n}),null)),null,518497111);\n}\n\nreturn com.fulcrologic.fulcro.components.tunnel_props_BANG_(c,new_props);\n} else {\nvar root = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"app-root\",\"com.fulcrologic.fulcro.application/app-root\",835379005).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1)));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c,root)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,46,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to do optimized update. Component\",com.fulcrologic.fulcro.components.class__GT_registry_key(com.fulcrologic.fulcro.components.react_type(c)),\"queries for data that changed, but does not have an ident.\"], null);\n}),null)),null,-1871504340);\n} else {\n}\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Targeted update failed\",cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Renders *only* components that *have* the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_components_with_ident_BANG_(app__$1,ident){\nvar seq__61113 = cljs.core.seq(com.fulcrologic.fulcro.components.ident__GT_components(app__$1,ident));\nvar chunk__61114 = null;\nvar count__61115 = (0);\nvar i__61116 = (0);\nwhile(true){\nif((i__61116 < count__61115)){\nvar c = chunk__61114.cljs$core$IIndexed$_nth$arity$2(null,i__61116);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__61479 = seq__61113;\nvar G__61480 = chunk__61114;\nvar G__61481 = count__61115;\nvar G__61482 = (i__61116 + (1));\nseq__61113 = G__61479;\nchunk__61114 = G__61480;\ncount__61115 = G__61481;\ni__61116 = G__61482;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__61113);\nif(temp__5753__auto__){\nvar seq__61113__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61113__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__61113__$1);\nvar G__61484 = cljs.core.chunk_rest(seq__61113__$1);\nvar G__61485 = c__4638__auto__;\nvar G__61486 = cljs.core.count(c__4638__auto__);\nvar G__61487 = (0);\nseq__61113 = G__61484;\nchunk__61114 = G__61485;\ncount__61115 = G__61486;\ni__61116 = G__61487;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__61113__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__61489 = cljs.core.next(seq__61113__$1);\nvar G__61490 = null;\nvar G__61491 = (0);\nvar G__61492 = (0);\nseq__61113 = G__61489;\nchunk__61114 = G__61490;\ncount__61115 = G__61491;\ni__61116 = G__61492;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Renders components that have, or query for, the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_dependents_of_ident_BANG_(app__$1,ident){\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,ident);\n\nvar map__61120 = app__$1;\nvar map__61120__$1 = cljs.core.__destructure_map(map__61120);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61120__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__61121 = cljs.core.deref(runtime_atom);\nvar map__61121__$1 = cljs.core.__destructure_map(map__61121);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61121__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__61122 = indexes;\nvar map__61122__$1 = cljs.core.__destructure_map(map__61122);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61122__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61122__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61122__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nvar idents_in_joins__$1 = (function (){var or__4212__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif(cljs.core.contains_QMARK_(idents_in_joins__$1,ident)){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(ident) : prop__GT_classes.call(null,ident));\nif(cljs.core.seq(classes)){\nvar seq__61124 = cljs.core.seq(classes);\nvar chunk__61125 = null;\nvar count__61126 = (0);\nvar i__61127 = (0);\nwhile(true){\nif((i__61127 < count__61126)){\nvar class$ = chunk__61125.cljs$core$IIndexed$_nth$arity$2(null,i__61127);\nvar seq__61177_61495 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__61179_61496 = null;\nvar count__61180_61497 = (0);\nvar i__61181_61498 = (0);\nwhile(true){\nif((i__61181_61498 < count__61180_61497)){\nvar component_61499 = chunk__61179_61496.cljs$core$IIndexed$_nth$arity$2(null,i__61181_61498);\nvar component_ident_61500 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_61499);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_61500,component_61499);\n\n\nvar G__61501 = seq__61177_61495;\nvar G__61502 = chunk__61179_61496;\nvar G__61503 = count__61180_61497;\nvar G__61504 = (i__61181_61498 + (1));\nseq__61177_61495 = G__61501;\nchunk__61179_61496 = G__61502;\ncount__61180_61497 = G__61503;\ni__61181_61498 = G__61504;\ncontinue;\n} else {\nvar temp__5753__auto___61506 = cljs.core.seq(seq__61177_61495);\nif(temp__5753__auto___61506){\nvar seq__61177_61507__$1 = temp__5753__auto___61506;\nif(cljs.core.chunked_seq_QMARK_(seq__61177_61507__$1)){\nvar c__4638__auto___61511 = cljs.core.chunk_first(seq__61177_61507__$1);\nvar G__61513 = cljs.core.chunk_rest(seq__61177_61507__$1);\nvar G__61514 = c__4638__auto___61511;\nvar G__61515 = cljs.core.count(c__4638__auto___61511);\nvar G__61516 = (0);\nseq__61177_61495 = G__61513;\nchunk__61179_61496 = G__61514;\ncount__61180_61497 = G__61515;\ni__61181_61498 = G__61516;\ncontinue;\n} else {\nvar component_61518 = cljs.core.first(seq__61177_61507__$1);\nvar component_ident_61519 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_61518);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_61519,component_61518);\n\n\nvar G__61520 = cljs.core.next(seq__61177_61507__$1);\nvar G__61521 = null;\nvar G__61522 = (0);\nvar G__61523 = (0);\nseq__61177_61495 = G__61520;\nchunk__61179_61496 = G__61521;\ncount__61180_61497 = G__61522;\ni__61181_61498 = G__61523;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__61524 = seq__61124;\nvar G__61525 = chunk__61125;\nvar G__61526 = count__61126;\nvar G__61527 = (i__61127 + (1));\nseq__61124 = G__61524;\nchunk__61125 = G__61525;\ncount__61126 = G__61526;\ni__61127 = G__61527;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__61124);\nif(temp__5753__auto__){\nvar seq__61124__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61124__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__61124__$1);\nvar G__61532 = cljs.core.chunk_rest(seq__61124__$1);\nvar G__61533 = c__4638__auto__;\nvar G__61534 = cljs.core.count(c__4638__auto__);\nvar G__61535 = (0);\nseq__61124 = G__61532;\nchunk__61125 = G__61533;\ncount__61126 = G__61534;\ni__61127 = G__61535;\ncontinue;\n} else {\nvar class$ = cljs.core.first(seq__61124__$1);\nvar seq__61194_61538 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__61196_61539 = null;\nvar count__61197_61540 = (0);\nvar i__61198_61541 = (0);\nwhile(true){\nif((i__61198_61541 < count__61197_61540)){\nvar component_61546 = chunk__61196_61539.cljs$core$IIndexed$_nth$arity$2(null,i__61198_61541);\nvar component_ident_61547 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_61546);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_61547,component_61546);\n\n\nvar G__61549 = seq__61194_61538;\nvar G__61550 = chunk__61196_61539;\nvar G__61551 = count__61197_61540;\nvar G__61552 = (i__61198_61541 + (1));\nseq__61194_61538 = G__61549;\nchunk__61196_61539 = G__61550;\ncount__61197_61540 = G__61551;\ni__61198_61541 = G__61552;\ncontinue;\n} else {\nvar temp__5753__auto___61554__$1 = cljs.core.seq(seq__61194_61538);\nif(temp__5753__auto___61554__$1){\nvar seq__61194_61555__$1 = temp__5753__auto___61554__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__61194_61555__$1)){\nvar c__4638__auto___61556 = cljs.core.chunk_first(seq__61194_61555__$1);\nvar G__61557 = cljs.core.chunk_rest(seq__61194_61555__$1);\nvar G__61558 = c__4638__auto___61556;\nvar G__61559 = cljs.core.count(c__4638__auto___61556);\nvar G__61560 = (0);\nseq__61194_61538 = G__61557;\nchunk__61196_61539 = G__61558;\ncount__61197_61540 = G__61559;\ni__61198_61541 = G__61560;\ncontinue;\n} else {\nvar component_61562 = cljs.core.first(seq__61194_61555__$1);\nvar component_ident_61563 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_61562);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_61563,component_61562);\n\n\nvar G__61564 = cljs.core.next(seq__61194_61555__$1);\nvar G__61565 = null;\nvar G__61566 = (0);\nvar G__61567 = (0);\nseq__61194_61538 = G__61564;\nchunk__61196_61539 = G__61565;\ncount__61197_61540 = G__61566;\ni__61198_61541 = G__61567;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__61568 = cljs.core.next(seq__61124__$1);\nvar G__61569 = null;\nvar G__61570 = (0);\nvar G__61571 = (0);\nseq__61124 = G__61568;\nchunk__61125 = G__61569;\ncount__61126 = G__61570;\ni__61127 = G__61571;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given an app and a `property-set`: returns the components that query for the items in property-set.\n * \n *   The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n *   in a component query as a property or join key.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$props__GT_components(app__$1,property_set){\nif(cljs.core.seq(property_set)){\nvar map__61216 = app__$1;\nvar map__61216__$1 = cljs.core.__destructure_map(map__61216);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61216__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__61217 = cljs.core.deref(runtime_atom);\nvar map__61217__$1 = cljs.core.__destructure_map(map__61217);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61217__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__61218 = indexes;\nvar map__61218__$1 = cljs.core.__destructure_map(map__61218);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61218__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61218__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,prop){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(prop) : prop__GT_classes.call(null,prop));\nvar components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__61212_SHARP_,p2__61213_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__61212_SHARP_,(class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(p2__61213_SHARP_) : class__GT_components.call(null,p2__61213_SHARP_)));\n}),cljs.core.PersistentHashSet.EMPTY,classes);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(result,components);\n}),cljs.core.PersistentHashSet.EMPTY,property_set);\n} else {\nreturn null;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_stale_components_BANG_(app__$1){\nvar map__61224 = app__$1;\nvar map__61224__$1 = cljs.core.__destructure_map(map__61224);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61224__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61224__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar map__61225 = cljs.core.deref(runtime_atom);\nvar map__61225__$1 = cljs.core.__destructure_map(map__61225);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61225__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar last_rendered_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61225__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"last-rendered-state\",\"com.fulcrologic.fulcro.application/last-rendered-state\",1438978441));\nvar to_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61225__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61225__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar map__61226 = indexes;\nvar map__61226__$1 = cljs.core.__destructure_map(map__61226);\nvar linked_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61226__$1,new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714));\nvar ident__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61226__$1,new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224));\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61226__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61226__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__61242 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__61242__$1 = cljs.core.__destructure_map(map__61242);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61242__$1,true);\nvar limited_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61242__$1,false);\nvar limited_to_render = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,limited_props);\nvar seq__61243_61582 = cljs.core.seq(limited_to_render);\nvar chunk__61245_61583 = null;\nvar count__61246_61584 = (0);\nvar i__61247_61585 = (0);\nwhile(true){\nif((i__61247_61585 < count__61246_61584)){\nvar c_61587 = chunk__61245_61583.cljs$core$IIndexed$_nth$arity$2(null,i__61247_61585);\nvar ident_61588 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_61587);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_61588,c_61587);\n\n\nvar G__61589 = seq__61243_61582;\nvar G__61590 = chunk__61245_61583;\nvar G__61591 = count__61246_61584;\nvar G__61592 = (i__61247_61585 + (1));\nseq__61243_61582 = G__61589;\nchunk__61245_61583 = G__61590;\ncount__61246_61584 = G__61591;\ni__61247_61585 = G__61592;\ncontinue;\n} else {\nvar temp__5753__auto___61594 = cljs.core.seq(seq__61243_61582);\nif(temp__5753__auto___61594){\nvar seq__61243_61595__$1 = temp__5753__auto___61594;\nif(cljs.core.chunked_seq_QMARK_(seq__61243_61595__$1)){\nvar c__4638__auto___61597 = cljs.core.chunk_first(seq__61243_61595__$1);\nvar G__61598 = cljs.core.chunk_rest(seq__61243_61595__$1);\nvar G__61599 = c__4638__auto___61597;\nvar G__61600 = cljs.core.count(c__4638__auto___61597);\nvar G__61601 = (0);\nseq__61243_61582 = G__61598;\nchunk__61245_61583 = G__61599;\ncount__61246_61584 = G__61600;\ni__61247_61585 = G__61601;\ncontinue;\n} else {\nvar c_61603 = cljs.core.first(seq__61243_61595__$1);\nvar ident_61604 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_61603);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_61604,c_61603);\n\n\nvar G__61605 = cljs.core.next(seq__61243_61595__$1);\nvar G__61606 = null;\nvar G__61607 = (0);\nvar G__61608 = (0);\nseq__61243_61582 = G__61605;\nchunk__61245_61583 = G__61606;\ncount__61246_61584 = G__61607;\ni__61247_61585 = G__61608;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__61280 = cljs.core.seq(limited_idents);\nvar chunk__61281 = null;\nvar count__61282 = (0);\nvar i__61283 = (0);\nwhile(true){\nif((i__61283 < count__61282)){\nvar i = chunk__61281.cljs$core$IIndexed$_nth$arity$2(null,i__61283);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__61610 = seq__61280;\nvar G__61611 = chunk__61281;\nvar G__61612 = count__61282;\nvar G__61613 = (i__61283 + (1));\nseq__61280 = G__61610;\nchunk__61281 = G__61611;\ncount__61282 = G__61612;\ni__61283 = G__61613;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__61280);\nif(temp__5753__auto__){\nvar seq__61280__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61280__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__61280__$1);\nvar G__61614 = cljs.core.chunk_rest(seq__61280__$1);\nvar G__61615 = c__4638__auto__;\nvar G__61616 = cljs.core.count(c__4638__auto__);\nvar G__61617 = (0);\nseq__61280 = G__61614;\nchunk__61281 = G__61615;\ncount__61282 = G__61616;\ni__61283 = G__61617;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__61280__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__61618 = cljs.core.next(seq__61280__$1);\nvar G__61619 = null;\nvar G__61620 = (0);\nvar G__61621 = (0);\nseq__61280 = G__61618;\nchunk__61281 = G__61619;\ncount__61282 = G__61620;\ni__61283 = G__61621;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nvar state_map = cljs.core.deref(state_atom);\nvar idents_in_joins__$1 = (function (){var or__4212__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nvar dirty_linked_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p){\nif((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(state_map,p) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(last_rendered_state,p))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\n} else {\nreturn acc;\n}\n}),cljs.core.PersistentHashSet.EMPTY,linked_props);\nvar map__61325 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,to_refresh);\nvar map__61325__$1 = cljs.core.__destructure_map(map__61325);\nvar idents_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61325__$1,true);\nvar props_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61325__$1,false);\nvar props_to_force__$1 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(props_to_force,dirty_linked_props);\nvar mounted_idents = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(ident__GT_components),idents_in_joins__$1);\nvar stale_idents = com.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries(last_rendered_state,state_map,mounted_idents);\nvar extra_to_force = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,props_to_force__$1);\nvar all_idents = clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.set(idents_to_force),cljs.core.set(stale_idents));\nvar seq__61326_61629 = cljs.core.seq(all_idents);\nvar chunk__61327_61630 = null;\nvar count__61328_61631 = (0);\nvar i__61329_61632 = (0);\nwhile(true){\nif((i__61329_61632 < count__61328_61631)){\nvar i_61633 = chunk__61327_61630.cljs$core$IIndexed$_nth$arity$2(null,i__61329_61632);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_61633);\n\n\nvar G__61635 = seq__61326_61629;\nvar G__61636 = chunk__61327_61630;\nvar G__61637 = count__61328_61631;\nvar G__61638 = (i__61329_61632 + (1));\nseq__61326_61629 = G__61635;\nchunk__61327_61630 = G__61636;\ncount__61328_61631 = G__61637;\ni__61329_61632 = G__61638;\ncontinue;\n} else {\nvar temp__5753__auto___61642 = cljs.core.seq(seq__61326_61629);\nif(temp__5753__auto___61642){\nvar seq__61326_61643__$1 = temp__5753__auto___61642;\nif(cljs.core.chunked_seq_QMARK_(seq__61326_61643__$1)){\nvar c__4638__auto___61644 = cljs.core.chunk_first(seq__61326_61643__$1);\nvar G__61645 = cljs.core.chunk_rest(seq__61326_61643__$1);\nvar G__61646 = c__4638__auto___61644;\nvar G__61647 = cljs.core.count(c__4638__auto___61644);\nvar G__61648 = (0);\nseq__61326_61629 = G__61645;\nchunk__61327_61630 = G__61646;\ncount__61328_61631 = G__61647;\ni__61329_61632 = G__61648;\ncontinue;\n} else {\nvar i_61651 = cljs.core.first(seq__61326_61643__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_61651);\n\n\nvar G__61652 = cljs.core.next(seq__61326_61643__$1);\nvar G__61653 = null;\nvar G__61654 = (0);\nvar G__61655 = (0);\nseq__61326_61629 = G__61652;\nchunk__61327_61630 = G__61653;\ncount__61328_61631 = G__61654;\ni__61329_61632 = G__61655;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__61366 = cljs.core.seq(extra_to_force);\nvar chunk__61367 = null;\nvar count__61368 = (0);\nvar i__61369 = (0);\nwhile(true){\nif((i__61369 < count__61368)){\nvar c = chunk__61367.cljs$core$IIndexed$_nth$arity$2(null,i__61369);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c),c);\n\n\nvar G__61661 = seq__61366;\nvar G__61662 = chunk__61367;\nvar G__61663 = count__61368;\nvar G__61664 = (i__61369 + (1));\nseq__61366 = G__61661;\nchunk__61367 = G__61662;\ncount__61368 = G__61663;\ni__61369 = G__61664;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__61366);\nif(temp__5753__auto__){\nvar seq__61366__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61366__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__61366__$1);\nvar G__61665 = cljs.core.chunk_rest(seq__61366__$1);\nvar G__61666 = c__4638__auto__;\nvar G__61667 = cljs.core.count(c__4638__auto__);\nvar G__61668 = (0);\nseq__61366 = G__61665;\nchunk__61367 = G__61666;\ncount__61368 = G__61667;\ni__61369 = G__61668;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__61366__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c),c);\n\n\nvar G__61669 = cljs.core.next(seq__61366__$1);\nvar G__61670 = null;\nvar G__61671 = (0);\nvar G__61672 = (0);\nseq__61366 = G__61669;\nchunk__61367 = G__61670;\ncount__61368 = G__61671;\ni__61369 = G__61672;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n *   it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n *   data that has changed.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_BANG_(var_args){\nvar G__61442 = arguments.length;\nswitch (G__61442) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__61443){\nvar map__61444 = p__61443;\nvar map__61444__$1 = cljs.core.__destructure_map(map__61444);\nvar options = map__61444__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61444__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61444__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__4212__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_(app__$1);\n}catch (e61447){var e = e61447;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,146,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n}),null)),null,1264792987);\n\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n}}\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","~:file","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",60],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^Q","~$log","~$taoensso.timbre","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^Q","~$com.fulcrologic.fulcro.algorithms.denormalize","^Y","~$cljs.core","^Z","~$goog","^[","^P","^P","^U","^U","^W","^W","^S","^S","~$fdn","^Y"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:form",["~#list",["~$ns","^I","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).",["^16",["^12",["^U","~:as","^T"],["^Y","^18","^10"],["^W","^18","^V"],["^P","^18","^O"],["^Q","^18","^X"],["^S","^18","^R"]]]]],"~:flags",["^ ","^12",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],"~:compiled-at",1636481276611,"^J",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"~:resource-name","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.ident-optimized-render\n  \"A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).\"\n  (:require\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.components :as comp]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defn dirty-table-entries\n  \"Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`.\"\n  [old-state new-state idents]\n  (reduce\n    (fn [result ident]\n      (if (identical? (get-in old-state ident) (get-in new-state ident))\n        result\n        (cons ident result)))\n    (list)\n    idents))\n\n(defn render-component!\n  \"Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \\\"props tunnelling\\\" (setting them on a well-known key in\n  component-local state).\"\n  [app ident c]\n  #?(:cljs\n     (if (and c ident)\n       (let [{:com.fulcrologic.fulcro.application/keys [state-atom]} app\n             state-map      @state-atom\n             query          (comp/get-query c state-map)\n             q              [{ident query}]\n             prior-computed (or (comp/get-computed c) {})\n             data-tree      (when query (fdn/db->tree q state-map state-map)) ; denormalize time is set by app render\n             new-props      (comp/computed (get data-tree ident) prior-computed)]\n         (when-not query (log/error \"Query was empty. Refresh failed for \" (type c)))\n         (comp/tunnel-props! c new-props))\n       (let [root (-> app :com.fulcrologic.fulcro.application/runtime-atom deref :com.fulcrologic.fulcro.application/app-root)]\n         (when (not= c root)\n           (log/info \"Failed to do optimized update. Component\" (-> c comp/react-type (comp/class->registry-key))\n             \"queries for data that changed, but does not have an ident.\"))\n         (throw (ex-info \"Targeted update failed\" {}))))))\n\n(defn render-components-with-ident!\n  \"Renders *only* components that *have* the given ident.\"\n  [app ident]\n  (doseq [c (comp/ident->components app ident)]\n    (render-component! app ident c)))\n\n(defn render-dependents-of-ident!\n  \"Renders components that have, or query for, the given ident.\"\n  [app ident]\n  (render-components-with-ident! app ident)\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n        {:keys [prop->classes idents-in-joins class->components]} indexes\n        idents-in-joins (or idents-in-joins #{})]\n    (when (contains? idents-in-joins ident)\n      (let [classes (prop->classes ident)]\n        (when (seq classes)\n          (doseq [class classes]\n            (doseq [component (class->components class)\n                    :let [component-ident (comp/get-ident component)]]\n              (render-component! app component-ident component))))))))\n\n(defn props->components\n  \"Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key.\"\n  [app property-set]\n  (when (seq property-set)\n    (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n          {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n          {:keys [prop->classes class->components]} indexes]\n      (reduce\n        (fn [result prop]\n          (let [classes    (prop->classes prop)\n                components (reduce #(into %1 (class->components %2)) #{} classes)]\n            (into result components)))\n        #{}\n        property-set))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom state-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes last-rendered-state\n                                                   to-refresh only-refresh]} @runtime-atom\n        {:keys [linked-props ident->components prop->classes idents-in-joins]} indexes\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true\n             limited-props  false} (group-by eql/ident? only-refresh)\n            limited-to-render (props->components app limited-props)]\n        (doseq [c limited-to-render\n                :let [ident (comp/get-ident c)]]\n          (render-component! app ident c))\n        (doseq [i limited-idents]\n          (render-dependents-of-ident! app i)))\n      (let [state-map          @state-atom\n            idents-in-joins    (or idents-in-joins #{})\n            dirty-linked-props (reduce\n                                 (fn [acc p]\n                                   (if (not (identical?\n                                              (get state-map p)\n                                              (get last-rendered-state p)))\n                                     (conj acc p)\n                                     acc))\n                                 #{}\n                                 linked-props)\n            {idents-to-force true\n             props-to-force  false} (group-by eql/ident? to-refresh)\n            props-to-force     (set/union props-to-force dirty-linked-props)\n            mounted-idents     (concat (keys ident->components) idents-in-joins)\n            stale-idents       (dirty-table-entries last-rendered-state state-map mounted-idents)\n            extra-to-force     (props->components app props-to-force)\n            all-idents         (set/union (set idents-to-force) (set stale-idents))]\n        (doseq [i all-idents]\n          (render-dependents-of-ident! app i))\n        (doseq [c extra-to-force]\n          (render-component! app (comp/get-ident c) c))))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (kr/render! app options)\n     (try\n       (render-stale-components! app)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (kr/render! app options))))))\n\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","old-state","new-state","idents","cljs.core.reduce","result","ident","cljs.core.get_in","cljs.core/cons","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","app","c","and__4210__auto__","map__61100","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","state-atom","state-map","query","com.fulcrologic.fulcro.components.get_query","q","prior-computed","or__4212__auto__","com.fulcrologic.fulcro.components.get_computed","data-tree","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","new-props","com.fulcrologic.fulcro.components/computed","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/type","com.fulcrologic.fulcro.components/tunnel-props!","root","cljs.core.not_EQ_","com.fulcrologic.fulcro.components/react-type","com.fulcrologic.fulcro.components/class->registry-key","cljs.core.ex_info","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","seq__61113","cljs.core/seq","chunk__61114","count__61115","i__61116","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","com.fulcrologic.fulcro.components/ident->components","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!","map__61120","map__61121","map__61122","runtime-atom","indexes","prop->classes","idents-in-joins","class->components","cljs.core/contains?","classes","seq__61124","chunk__61125","count__61126","i__61127","class","seq__61177","chunk__61179","count__61180","i__61181","seq__61194","chunk__61196","count__61197","i__61198","component","component-ident","com.fulcrologic.fulcro.components.get_ident","com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","property-set","map__61216","map__61217","map__61218","prop","components","p1__61212#","p2__61213#","cljs.core.into","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","map__61224","map__61225","map__61226","last-rendered-state","to-refresh","only-refresh","linked-props","ident->components","limited-refresh?","map__61242","limited-idents","limited-props","cljs.core/group-by","edn-query-language.core/ident?","limited-to-render","seq__61243","chunk__61245","count__61246","i__61247","seq__61280","chunk__61281","count__61282","i__61283","i","map__61325","dirty-linked-props","acc","p","cljs.core.conj","idents-to-force","props-to-force","clojure.set.union","mounted-idents","cljs.core.concat","cljs.core/keys","stale-idents","extra-to-force","all-idents","cljs.core/set","seq__61326","chunk__61327","count__61328","i__61329","seq__61366","chunk__61367","count__61368","i__61369","var_args","G__61442","com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","js/Error","p__61443","map__61444","com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_","force-root?","root-props-changed?","options","com.fulcrologic.fulcro.rendering.keyframe-render/render!","e61447","e","cljs.core/List"]],"~:used-vars",["^G",["~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$com.fulcrologic.fulcro.components/computed","~$cljs.core/keys","~$taoensso.timbre/-log!","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.components/react-type","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$cljs.core/not=","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","~$cljs.core/concat","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","~$cljs.core/set","~$cljs.core/contains?","~$cljs.core/into","~$com.fulcrologic.fulcro.components/get-ident","~$cljs.core/conj","~$taoensso.timbre/*config*","~$com.fulcrologic.fulcro.components/ident->components","~$cljs.core/get-in","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$com.fulcrologic.fulcro.algorithms.denormalize/db->tree","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.components/tunnel-props!","~$com.fulcrologic.fulcro.components/get-computed","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$com.fulcrologic.fulcro.components/get-query","~$cljs.core/not","~$cljs.core/cons","~$clojure.set/union","~$com.fulcrologic.fulcro.components/class->registry-key","~$cljs.core/first","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!"]]],"~:cache-keys",["~#cmap",[["^1=","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^[","~$goog.dom.HtmlElement"]]],["^1=","goog/async/freelist.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.labs.userAgent.util","~$goog.string"]]],["^1=","expound/util.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","goog/crypt/crypt.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.array","~$goog.asserts"]]],["^1=","goog/timer/timer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1=","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^S"]]],["^1=","cljs/spec/gen/alpha.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$goog.Uri"]]],["^1=","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$clojure.string","^2V"]]],["^1=","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X"]]],["^1=","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/string/stringformat.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2V"]]],["^1=","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1=","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2U","~$goog.object","~$goog.string.internal"]]],["^1=","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^35"]]],["^1=","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X"]]],["^1=","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^S","^31","^Q","^34","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1=","expound/problems.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$expound.paths","^@"]]],["^1=","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2U","~$goog.reflect","^2V"]]],["^1=","goog/structs/prioritypool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1=","goog/async/run.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1=","taoensso/encore.cljs"],["19e6b7df8d479139a889d03eb0612d0b7a326998","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^P","~$cljs.reader","~$cljs.tools.reader.edn","^34","^2V","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1=","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/async/workqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.async.FreeList"]]],["^1=","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^32","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1=","goog/promise/resolver.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2Y"]]],["^1=","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^33"]]],["^1=","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2V","^3K"]]],["^1=","goog/structs/priorityqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.structs.Heap"]]],["^1=","goog/net/xhrio.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.Timer","^2W","^2X","^3T","^2Z","~$goog.json.hybrid","~$goog.log","^3Q","^3P","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^34","^2V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^33","^30","^3X","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1=","goog/promise/thenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2Y"]]],["^1=","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","cljs/pprint.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^2V","^3K"]]],["^1=","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^43","^44","^45","^42","^2W","^2V","^3K"]]],["^1=","expound/alpha.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$expound.problems","^@","^31","^P","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1=","goog/net/wrapperxmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4@","^4A"]]],["^1=","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.Disposable","^2X","^3L","~$goog.events.Event","^3V","^3W","^34","^3Y","^3Z","^40"]]],["^1=","com/fulcrologic/guardrails/core.cljc"],["fea1142983ea044a9d4139a04fb7599e98df5174","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^S","^@","~$expound.alpha"]]],["^1=","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.disposable.IDisposable"]]],["^1=","expound/ansi.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31"]]],["^1=","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1=","shadow/js.js"],["0273d29a26c6414d6326ed34664dcb7e98415b06","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X"]]],["^1=","goog/structs/set.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4=","~$goog.structs.Collection","^4>","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1635907472000,1635907472000,1635907547000],["^4J","node_modules/react/cjs/react.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","754b7a48941975257c8955f6d5e511cb3a878737","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^4K","~$module$node_modules$object_assign$index"]]],["^1=","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^3B"]]],["^1=","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^40","^3V"]]],["^1=","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.fs.blob","^36","~$goog.html.SafeScript","~$goog.html.trustedtypes","^38","^39","^3:","^3;"]]],["^1=","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.debug","~$goog.debug.Logger","~$goog.iter","^4:","^4>","~$goog.structs.SimplePool"]]],["^1=","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^41","^34","^3Y","^3V","^40"]]],["^1=","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","taoensso/truss.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$taoensso.truss.impl"]]],["^1=","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1=","edn_query_language/core.cljc"],["89cd2ff9787f6dfcb81506253473dfa9b27d718a","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^@"]]],["^1=","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.html.SafeUrl","^3:","^3;","^35"]]],["^1=","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4S","~$goog.html.SafeStyle","^50","^37","~$goog.html.uncheckedconversions","^3:","^35"]]],["^1=","expound/paths.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^@","^4D"]]],["^1=","taoensso/truss/impl.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^P"]]],["^1=","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","goog/useragent/product.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3?","^3A","^33"]]],["^1=","goog/net/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4O","~$goog.iter.StopIteration"]]],["^1=","goog/net/xhriopool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3M","~$goog.structs.PriorityPool","^4>"]]],["^1=","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.dom.TagName","~$goog.dom.tags","^4S","^54","~$goog.html.SafeStyleSheet","^50","^37","^4T","^38","^39","^3?","^34","^3:","^3;","^35"]]],["^1=","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^34"]]],["^1=","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/queue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W"]]],["^1=","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2U","^2V"]]],["^1=","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W"]]],["^1=","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","~$taoensso.encore"]]],["^1=","cljs/reader.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^34","^46","^3I","^3K"]]],["^1=","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^58","~$goog.dom.safe","^53","^55","~$goog.math.Coordinate","~$goog.math.Size","^34","^2V","^3:","~$goog.string.Unicode","^33"]]],["^1=","com/fulcrologic/fulcro/components.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^34","~$cljsjs.react","^Q","^@","^S","^5;","~$clojure.walk","^31","~$com.fulcrologic.fulcro.algorithms.do-not-use","^Y","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.guardrails.core","^P"]]],["^1=","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.debug.Error","^5="]]],["^1=","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","^2V","^4=","^4>","^4?","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/net/errorcode.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^4J","node_modules/object-assign/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","519ffd5a4c91b67302cc9947b794966d629860cd","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^4K"]]],["^1=","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","^2X","^4U","~$goog.debug.EntryPointMonitor","^5G","~$goog.debug.Trace"]]],["^1=","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/promise/promise.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2[","^2X","^3S","~$goog.async.run","^3G","^5G","~$goog.promise.Resolver"]]],["^1=","cljs/spec/alpha.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^34","^5C","~$cljs.spec.gen.alpha","^31"]]],["^1=","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",[]]],["^1=","goog/json/hybrid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.json"]]],["^1=","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^34"]]],["^1=","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^43","^31","~$cljs.tools.reader.impl.inspect"]]],["^1=","cljsjs/react.cljs"],["4323f8e603a952cae34c4c6db04141e97928434f","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$module$node_modules$react$index"]]],["^1=","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^2V","^3K"]]],["^1=","goog/structs/pool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","~$goog.structs.Queue","~$goog.structs.Set"]]],["^4J","node_modules/react/cjs/react.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","0a81b45abe33f0ad39b726512604018f94261db9","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^4K","^4Q"]]],["^1=","goog/net/httpstatus.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/heap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^34","~$goog.structs.Node"]]],["^1=","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X"]]],["^1=","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^5>","^55","^3:","^35"]]],["^1=","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^Y","^5E","^W"]]],["^1=","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^35"]]],["^1=","expound/printer.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^@","^B","^P","^4D","^4E","^3>","^5C","^3J","^2V"]]],["^1=","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","~$goog.debug.errorcontext","^33"]]],["^1=","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.math"]]],["^1=","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^44","^2V","^3K"]]],["^1=","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","^52","^5V"]]],["^1=","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3T","~$goog.dom","^58","^52","^3?","^3@"]]],["^1=","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^53","^4S","^54","^5:","^50","^37","^3:","^35","^38"]]],["^1=","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4U","^4:","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^1=","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","^3Y"]]],["^1=","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^42","^43","^44"]]],["^1=","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","^3L","^34","^4G","^3Y","^2Z","^3["]]],["^1=","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.math.Long","~$goog.math.Integer","^2V","^34","^2W","^30","^3K"]]],["^1=","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3:","^3;","^4T","^2X"]]],["^1=","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^4U"]]],["^1=","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3:","^54","^3;","^2W","^34","^2X","^35"]]],["^1=","goog/structs/collection.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4U","^32","^4G","~$goog.events.EventType","^3B","^33"]]],["^1=","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3B"]]],["^1=","goog/structs/node.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F"]]],["^1=","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^33"]]],["^1=","clojure/set.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^2V"]]],["^1=","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^3;"]]],["^1=","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^5;","~$taoensso.timbre.appenders.core"]]],["^1=","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]]],["^1=","goog/json/json.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3Y","^3Z"]]],["^1=","goog/net/xmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4@"]]],["^1=","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^S","^P","^Q"]]],["^1=","goog/net/xmlhttp.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.net.WrapperXmlHttpFactory","^4A","^4@"]]],["^1=","goog/net/xhrlike.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/crypt/base64.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^3<","^2V","^33","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/pprint.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1617990988000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/alpha.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/problems.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1617990988000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1635907473000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1635907473000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/core.cljc",1635907473000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/spec/alpha.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/utils.cljc",1635907473000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1635907473000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/edn-query-language/eql/1.0.0/eql-1.0.0.jar!/edn_query_language/core.cljc",1635907473000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/encore/2.120.0/encore-2.120.0.jar!/taoensso/encore.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/ansi.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/util.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/reader.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/components.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/spec/gen/alpha.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/paths.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/printer.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/config.cljc",1635907473000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",1,"^9",5,"^:",1,"^;",60],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",[]],"^H","^I","^J",["^ "],"^M",null,"^N",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"^11",["^G",["^12"]],"~:shadow/js-access-global",["^G",["Error"]],"^13",null,"~:defs",["^ ","~$dirty-table-entries",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",16,"^9",7,"^:",16,"^;",26,"~:arglists",["^16",["~$quote",["^16",[["~$old-state","~$new-state","~$idents"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"^H","^1[","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",26,"~:method-params",["^16",[["^7O","^7P","^7Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^9",1,"~:variadic?",false,"^8",16,"~:ret-tag",["^G",[null,"~$any"]],"^:",16,"~:max-fixed-arity",3,"~:fn-var",true,"^7M",["^16",["^7N",["^16",[["^7O","^7P","^7Q"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"~$render-component!",["^ ","^7L",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",28,"^9",7,"^:",28,"^;",24,"^7M",["^16",["^7N",["^16",[["~$app","~$ident","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"^H","^1J","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^7R",["^16",[["^7[","^80","~$c"]]],"^7S",null,"^7T",["^16",[null,null]],"^9",1,"^7U",false,"^8",28,"^7V",["^G",["~$js","~$clj-nil"]],"^:",28,"^7X",3,"^7Y",true,"^7M",["^16",["^7N",["^16",[["^7[","^80","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"~$render-components-with-ident!",["^ ","^7L",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",50,"^9",7,"^:",50,"^;",36,"^7M",["^16",["^7N",["^16",[["^7[","^80"]]]]],"^6","Renders *only* components that *have* the given ident."],"^H","^1L","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",36,"^7R",["^16",[["^7[","^80"]]],"^7S",null,"^7T",["^16",[null,null]],"^9",1,"^7U",false,"^8",50,"^7V","^82","^:",50,"^7X",2,"^7Y",true,"^7M",["^16",["^7N",["^16",[["^7[","^80"]]]]],"^6","Renders *only* components that *have* the given ident."],"~$render-dependents-of-ident!",["^ ","^7L",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",56,"^9",7,"^:",56,"^;",34,"^7M",["^16",["^7N",["^16",[["^7[","^80"]]]]],"^6","Renders components that have, or query for, the given ident."],"^H","^2M","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",34,"^7R",["^16",[["^7[","^80"]]],"^7S",null,"^7T",["^16",[null,null]],"^9",1,"^7U",false,"^8",56,"^7V","^82","^:",56,"^7X",2,"^7Y",true,"^7M",["^16",["^7N",["^16",[["^7[","^80"]]]]],"^6","Renders components that have, or query for, the given ident."],"~$props->components",["^ ","^7L",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^7M",["^16",["^7N",["^16",[["^7[","~$property-set"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"^H","^1K","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^7R",["^16",[["^7[","^86"]]],"^7S",null,"^7T",["^16",[null,null]],"^9",1,"^7U",false,"^8",72,"^7V",["^G",[null,"^7W","^82"]],"^:",72,"^7X",2,"^7Y",true,"^7M",["^16",["^7N",["^16",[["^7[","^86"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"~$render-stale-components!",["^ ","^7L",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",90,"^9",7,"^:",90,"^;",31,"^7M",["^16",["^7N",["^16",[["^7["]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^H","^21","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",31,"^7R",["^16",[["^7["]]],"^7S",null,"^7T",["^16",[null,null]],"^9",1,"^7U",false,"^8",90,"^7V","^82","^:",90,"^7X",1,"^7Y",true,"^7M",["^16",["^7N",["^16",[["^7["]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^7L",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^7M",["^16",["^7N",["^16",[["^7["],["^7[",["^ ","~:keys",["~$force-root?","~$root-props-changed?"],"^18","~$options"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.","~:top-fn",["^ ","^7U",false,"~:fixed-arity",2,"^7X",2,"^7R",[["^7["],["^7[",["^ ","^89",["^8:","^8;"],"^18","^8<"]]],"^7M",["^16",[["^7["],["^7[",["^ ","^89",["^8:","^8;"],"^18","^8<"]]]],"^7T",["^16",[null,null]]]],"^H","^2>","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",14,"^8=",["^ ","^7U",false,"^8>",2,"^7X",2,"^7R",[["^7["],["^7[",["^ ","^89",["^8:","^8;"],"^18","^8<"]]],"^7M",["^16",[["^7["],["^7[",["^ ","^89",["^8:","^8;"],"^18","^8<"]]]],"^7T",["^16",[null,null]]],"^7R",[["^7["],["^7[",["^ ","^89",["^8:","^8;"],"^18","^8<"]]],"^7S",null,"^8>",2,"^7T",["^16",[null,null]],"^9",1,"^7U",false,"~:methods",[["^ ","^8>",1,"^7U",false,"~:tag","^7W"],["^ ","^8>",2,"^7U",false,"^8@",["^G",[null,"^7W"]]]],"^8",132,"^:",132,"^7X",2,"^7Y",true,"^7M",["^16",[["^7["],["^7[",["^ ","^89",["^8:","^8;"],"^18","^8<"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed."]],"^14",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:com.fulcrologic.fulcro.application/indexes","~:com.fulcrologic.fulcro.application/last-rendered-state","~:idents-in-joins","~:prop->classes","~:force-root?","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:class->components","~:com.fulcrologic.fulcro.application/to-refresh","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p","~:com.fulcrologic.fulcro.application/app-root"]],"~:order",["^8G","^8N","~:p","^8Q","^8R","^8L","^8M","^8B","^8E","^8D","^8I","^8C","^8J","^8H","^8P","^8O","^8F","^8K"]],"^19",["^ ","^12",["^G",[]]],"^1:",["^ "],"^1;",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^2O",[["^8V","~:static-fns"],true,["^8V","~:shadow-tweaks"],null,["^8V","~:source-map-inline"],null,["^8V","~:elide-asserts"],false,["^8V","~:optimize-constants"],null,["^8V","^1@"],null,["^8V","~:external-config"],null,["^8V","~:tooling-config"],null,["^8V","~:emit-constants"],null,["^8V","~:load-tests"],null,["^8V","~:form-size-threshold"],null,["^8V","~:data-readers"],null,["^8V","~:infer-externs"],"^8Q",["^8V","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8V","~:fn-invoke-direct"],null,["^8V","~:source-map"],"/dev/null"]]]