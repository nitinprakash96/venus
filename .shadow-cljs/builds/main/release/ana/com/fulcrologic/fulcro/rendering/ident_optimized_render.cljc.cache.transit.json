["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.ident_optimized_render');\n/**\n * Checks the given `idents` and returns a subset of them where the data they refer to has changed\n * between `old-state` and `new-state`.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$dirty_table_entries(old_state,new_state,idents){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,ident){\nif((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_state,ident) === cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_state,ident))){\nreturn result;\n} else {\nreturn cljs.core.cons(ident,result);\n}\n}),cljs.core.List.EMPTY,idents);\n});\n/**\n * Uses the component's query and the current application state to query for the current value of that component's\n *   props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n *   component-local state).\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_component_BANG_(app__$1,ident,c){\nif(cljs.core.truth_((function (){var and__4210__auto__ = c;\nif(cljs.core.truth_(and__4210__auto__)){\nreturn ident;\n} else {\nreturn and__4210__auto__;\n}\n})())){\nvar map__57733 = app__$1;\nvar map__57733__$1 = cljs.core.__destructure_map(map__57733);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57733__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar state_map = cljs.core.deref(state_atom);\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(c,state_map);\nvar q = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,query])], null);\nvar prior_computed = (function (){var or__4212__auto__ = com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1(c);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar data_tree = (cljs.core.truth_(query)?com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(q,state_map,state_map):null);\nvar new_props = com.fulcrologic.fulcro.components.computed(cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,ident),prior_computed);\nif(cljs.core.truth_(query)){\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,42,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Query was empty. Refresh failed for \",cljs.core.type(c)], null);\n}),null)),null,-1461427158);\n}\n\nreturn com.fulcrologic.fulcro.components.tunnel_props_BANG_(c,new_props);\n} else {\nvar root = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"app-root\",\"com.fulcrologic.fulcro.application/app-root\",835379005).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1)));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c,root)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,46,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to do optimized update. Component\",com.fulcrologic.fulcro.components.class__GT_registry_key(com.fulcrologic.fulcro.components.react_type(c)),\"queries for data that changed, but does not have an ident.\"], null);\n}),null)),null,-774999797);\n} else {\n}\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Targeted update failed\",cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Renders *only* components that *have* the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_components_with_ident_BANG_(app__$1,ident){\nvar seq__57754 = cljs.core.seq(com.fulcrologic.fulcro.components.ident__GT_components(app__$1,ident));\nvar chunk__57755 = null;\nvar count__57756 = (0);\nvar i__57757 = (0);\nwhile(true){\nif((i__57757 < count__57756)){\nvar c = chunk__57755.cljs$core$IIndexed$_nth$arity$2(null,i__57757);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__58068 = seq__57754;\nvar G__58069 = chunk__57755;\nvar G__58070 = count__57756;\nvar G__58071 = (i__57757 + (1));\nseq__57754 = G__58068;\nchunk__57755 = G__58069;\ncount__57756 = G__58070;\ni__57757 = G__58071;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57754);\nif(temp__5753__auto__){\nvar seq__57754__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57754__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__57754__$1);\nvar G__58072 = cljs.core.chunk_rest(seq__57754__$1);\nvar G__58073 = c__4638__auto__;\nvar G__58074 = cljs.core.count(c__4638__auto__);\nvar G__58075 = (0);\nseq__57754 = G__58072;\nchunk__57755 = G__58073;\ncount__57756 = G__58074;\ni__57757 = G__58075;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__57754__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__58076 = cljs.core.next(seq__57754__$1);\nvar G__58077 = null;\nvar G__58078 = (0);\nvar G__58079 = (0);\nseq__57754 = G__58076;\nchunk__57755 = G__58077;\ncount__57756 = G__58078;\ni__57757 = G__58079;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Renders components that have, or query for, the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_dependents_of_ident_BANG_(app__$1,ident){\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,ident);\n\nvar map__57775 = app__$1;\nvar map__57775__$1 = cljs.core.__destructure_map(map__57775);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57775__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__57776 = cljs.core.deref(runtime_atom);\nvar map__57776__$1 = cljs.core.__destructure_map(map__57776);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57776__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__57778 = indexes;\nvar map__57778__$1 = cljs.core.__destructure_map(map__57778);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57778__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57778__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57778__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nvar idents_in_joins__$1 = (function (){var or__4212__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif(cljs.core.contains_QMARK_(idents_in_joins__$1,ident)){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(ident) : prop__GT_classes.call(null,ident));\nif(cljs.core.seq(classes)){\nvar seq__57788 = cljs.core.seq(classes);\nvar chunk__57789 = null;\nvar count__57790 = (0);\nvar i__57791 = (0);\nwhile(true){\nif((i__57791 < count__57790)){\nvar class$ = chunk__57789.cljs$core$IIndexed$_nth$arity$2(null,i__57791);\nvar seq__57840_58089 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__57842_58090 = null;\nvar count__57843_58091 = (0);\nvar i__57844_58092 = (0);\nwhile(true){\nif((i__57844_58092 < count__57843_58091)){\nvar component_58094 = chunk__57842_58090.cljs$core$IIndexed$_nth$arity$2(null,i__57844_58092);\nvar component_ident_58096 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58094);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58096,component_58094);\n\n\nvar G__58098 = seq__57840_58089;\nvar G__58099 = chunk__57842_58090;\nvar G__58100 = count__57843_58091;\nvar G__58101 = (i__57844_58092 + (1));\nseq__57840_58089 = G__58098;\nchunk__57842_58090 = G__58099;\ncount__57843_58091 = G__58100;\ni__57844_58092 = G__58101;\ncontinue;\n} else {\nvar temp__5753__auto___58103 = cljs.core.seq(seq__57840_58089);\nif(temp__5753__auto___58103){\nvar seq__57840_58104__$1 = temp__5753__auto___58103;\nif(cljs.core.chunked_seq_QMARK_(seq__57840_58104__$1)){\nvar c__4638__auto___58105 = cljs.core.chunk_first(seq__57840_58104__$1);\nvar G__58106 = cljs.core.chunk_rest(seq__57840_58104__$1);\nvar G__58107 = c__4638__auto___58105;\nvar G__58108 = cljs.core.count(c__4638__auto___58105);\nvar G__58109 = (0);\nseq__57840_58089 = G__58106;\nchunk__57842_58090 = G__58107;\ncount__57843_58091 = G__58108;\ni__57844_58092 = G__58109;\ncontinue;\n} else {\nvar component_58110 = cljs.core.first(seq__57840_58104__$1);\nvar component_ident_58111 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58110);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58111,component_58110);\n\n\nvar G__58112 = cljs.core.next(seq__57840_58104__$1);\nvar G__58113 = null;\nvar G__58114 = (0);\nvar G__58115 = (0);\nseq__57840_58089 = G__58112;\nchunk__57842_58090 = G__58113;\ncount__57843_58091 = G__58114;\ni__57844_58092 = G__58115;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__58117 = seq__57788;\nvar G__58118 = chunk__57789;\nvar G__58119 = count__57790;\nvar G__58120 = (i__57791 + (1));\nseq__57788 = G__58117;\nchunk__57789 = G__58118;\ncount__57790 = G__58119;\ni__57791 = G__58120;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57788);\nif(temp__5753__auto__){\nvar seq__57788__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57788__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__57788__$1);\nvar G__58123 = cljs.core.chunk_rest(seq__57788__$1);\nvar G__58124 = c__4638__auto__;\nvar G__58125 = cljs.core.count(c__4638__auto__);\nvar G__58126 = (0);\nseq__57788 = G__58123;\nchunk__57789 = G__58124;\ncount__57790 = G__58125;\ni__57791 = G__58126;\ncontinue;\n} else {\nvar class$ = cljs.core.first(seq__57788__$1);\nvar seq__57855_58128 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__57857_58129 = null;\nvar count__57858_58130 = (0);\nvar i__57859_58131 = (0);\nwhile(true){\nif((i__57859_58131 < count__57858_58130)){\nvar component_58135 = chunk__57857_58129.cljs$core$IIndexed$_nth$arity$2(null,i__57859_58131);\nvar component_ident_58141 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58135);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58141,component_58135);\n\n\nvar G__58144 = seq__57855_58128;\nvar G__58145 = chunk__57857_58129;\nvar G__58146 = count__57858_58130;\nvar G__58147 = (i__57859_58131 + (1));\nseq__57855_58128 = G__58144;\nchunk__57857_58129 = G__58145;\ncount__57858_58130 = G__58146;\ni__57859_58131 = G__58147;\ncontinue;\n} else {\nvar temp__5753__auto___58148__$1 = cljs.core.seq(seq__57855_58128);\nif(temp__5753__auto___58148__$1){\nvar seq__57855_58149__$1 = temp__5753__auto___58148__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__57855_58149__$1)){\nvar c__4638__auto___58151 = cljs.core.chunk_first(seq__57855_58149__$1);\nvar G__58155 = cljs.core.chunk_rest(seq__57855_58149__$1);\nvar G__58156 = c__4638__auto___58151;\nvar G__58157 = cljs.core.count(c__4638__auto___58151);\nvar G__58158 = (0);\nseq__57855_58128 = G__58155;\nchunk__57857_58129 = G__58156;\ncount__57858_58130 = G__58157;\ni__57859_58131 = G__58158;\ncontinue;\n} else {\nvar component_58163 = cljs.core.first(seq__57855_58149__$1);\nvar component_ident_58164 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_58163);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_58164,component_58163);\n\n\nvar G__58165 = cljs.core.next(seq__57855_58149__$1);\nvar G__58166 = null;\nvar G__58167 = (0);\nvar G__58168 = (0);\nseq__57855_58128 = G__58165;\nchunk__57857_58129 = G__58166;\ncount__57858_58130 = G__58167;\ni__57859_58131 = G__58168;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__58170 = cljs.core.next(seq__57788__$1);\nvar G__58171 = null;\nvar G__58172 = (0);\nvar G__58173 = (0);\nseq__57788 = G__58170;\nchunk__57789 = G__58171;\ncount__57790 = G__58172;\ni__57791 = G__58173;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given an app and a `property-set`: returns the components that query for the items in property-set.\n * \n *   The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n *   in a component query as a property or join key.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$props__GT_components(app__$1,property_set){\nif(cljs.core.seq(property_set)){\nvar map__57881 = app__$1;\nvar map__57881__$1 = cljs.core.__destructure_map(map__57881);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57881__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__57882 = cljs.core.deref(runtime_atom);\nvar map__57882__$1 = cljs.core.__destructure_map(map__57882);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57882__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__57883 = indexes;\nvar map__57883__$1 = cljs.core.__destructure_map(map__57883);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57883__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57883__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,prop){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(prop) : prop__GT_classes.call(null,prop));\nvar components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__57875_SHARP_,p2__57876_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__57875_SHARP_,(class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(p2__57876_SHARP_) : class__GT_components.call(null,p2__57876_SHARP_)));\n}),cljs.core.PersistentHashSet.EMPTY,classes);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(result,components);\n}),cljs.core.PersistentHashSet.EMPTY,property_set);\n} else {\nreturn null;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_stale_components_BANG_(app__$1){\nvar map__57897 = app__$1;\nvar map__57897__$1 = cljs.core.__destructure_map(map__57897);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57897__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57897__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar map__57898 = cljs.core.deref(runtime_atom);\nvar map__57898__$1 = cljs.core.__destructure_map(map__57898);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57898__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar last_rendered_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57898__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"last-rendered-state\",\"com.fulcrologic.fulcro.application/last-rendered-state\",1438978441));\nvar to_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57898__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57898__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar map__57899 = indexes;\nvar map__57899__$1 = cljs.core.__destructure_map(map__57899);\nvar linked_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57899__$1,new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714));\nvar ident__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57899__$1,new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224));\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57899__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57899__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__57907 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__57907__$1 = cljs.core.__destructure_map(map__57907);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57907__$1,true);\nvar limited_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57907__$1,false);\nvar limited_to_render = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,limited_props);\nvar seq__57911_58187 = cljs.core.seq(limited_to_render);\nvar chunk__57913_58188 = null;\nvar count__57914_58189 = (0);\nvar i__57915_58190 = (0);\nwhile(true){\nif((i__57915_58190 < count__57914_58189)){\nvar c_58193 = chunk__57913_58188.cljs$core$IIndexed$_nth$arity$2(null,i__57915_58190);\nvar ident_58195 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_58193);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_58195,c_58193);\n\n\nvar G__58196 = seq__57911_58187;\nvar G__58197 = chunk__57913_58188;\nvar G__58198 = count__57914_58189;\nvar G__58199 = (i__57915_58190 + (1));\nseq__57911_58187 = G__58196;\nchunk__57913_58188 = G__58197;\ncount__57914_58189 = G__58198;\ni__57915_58190 = G__58199;\ncontinue;\n} else {\nvar temp__5753__auto___58201 = cljs.core.seq(seq__57911_58187);\nif(temp__5753__auto___58201){\nvar seq__57911_58202__$1 = temp__5753__auto___58201;\nif(cljs.core.chunked_seq_QMARK_(seq__57911_58202__$1)){\nvar c__4638__auto___58203 = cljs.core.chunk_first(seq__57911_58202__$1);\nvar G__58204 = cljs.core.chunk_rest(seq__57911_58202__$1);\nvar G__58205 = c__4638__auto___58203;\nvar G__58206 = cljs.core.count(c__4638__auto___58203);\nvar G__58207 = (0);\nseq__57911_58187 = G__58204;\nchunk__57913_58188 = G__58205;\ncount__57914_58189 = G__58206;\ni__57915_58190 = G__58207;\ncontinue;\n} else {\nvar c_58209 = cljs.core.first(seq__57911_58202__$1);\nvar ident_58210 = com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_58209);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_58210,c_58209);\n\n\nvar G__58212 = cljs.core.next(seq__57911_58202__$1);\nvar G__58213 = null;\nvar G__58214 = (0);\nvar G__58215 = (0);\nseq__57911_58187 = G__58212;\nchunk__57913_58188 = G__58213;\ncount__57914_58189 = G__58214;\ni__57915_58190 = G__58215;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__57942 = cljs.core.seq(limited_idents);\nvar chunk__57943 = null;\nvar count__57944 = (0);\nvar i__57945 = (0);\nwhile(true){\nif((i__57945 < count__57944)){\nvar i = chunk__57943.cljs$core$IIndexed$_nth$arity$2(null,i__57945);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__58218 = seq__57942;\nvar G__58219 = chunk__57943;\nvar G__58220 = count__57944;\nvar G__58221 = (i__57945 + (1));\nseq__57942 = G__58218;\nchunk__57943 = G__58219;\ncount__57944 = G__58220;\ni__57945 = G__58221;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__57942);\nif(temp__5753__auto__){\nvar seq__57942__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__57942__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__57942__$1);\nvar G__58224 = cljs.core.chunk_rest(seq__57942__$1);\nvar G__58225 = c__4638__auto__;\nvar G__58226 = cljs.core.count(c__4638__auto__);\nvar G__58227 = (0);\nseq__57942 = G__58224;\nchunk__57943 = G__58225;\ncount__57944 = G__58226;\ni__57945 = G__58227;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__57942__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__58230 = cljs.core.next(seq__57942__$1);\nvar G__58231 = null;\nvar G__58232 = (0);\nvar G__58233 = (0);\nseq__57942 = G__58230;\nchunk__57943 = G__58231;\ncount__57944 = G__58232;\ni__57945 = G__58233;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nvar state_map = cljs.core.deref(state_atom);\nvar idents_in_joins__$1 = (function (){var or__4212__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nvar dirty_linked_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p){\nif((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(state_map,p) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(last_rendered_state,p))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\n} else {\nreturn acc;\n}\n}),cljs.core.PersistentHashSet.EMPTY,linked_props);\nvar map__57967 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,to_refresh);\nvar map__57967__$1 = cljs.core.__destructure_map(map__57967);\nvar idents_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57967__$1,true);\nvar props_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__57967__$1,false);\nvar props_to_force__$1 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(props_to_force,dirty_linked_props);\nvar mounted_idents = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(ident__GT_components),idents_in_joins__$1);\nvar stale_idents = com.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries(last_rendered_state,state_map,mounted_idents);\nvar extra_to_force = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,props_to_force__$1);\nvar all_idents = clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.set(idents_to_force),cljs.core.set(stale_idents));\nvar seq__58000_58239 = cljs.core.seq(all_idents);\nvar chunk__58001_58240 = null;\nvar count__58002_58241 = (0);\nvar i__58003_58242 = (0);\nwhile(true){\nif((i__58003_58242 < count__58002_58241)){\nvar i_58244 = chunk__58001_58240.cljs$core$IIndexed$_nth$arity$2(null,i__58003_58242);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_58244);\n\n\nvar G__58246 = seq__58000_58239;\nvar G__58247 = chunk__58001_58240;\nvar G__58248 = count__58002_58241;\nvar G__58249 = (i__58003_58242 + (1));\nseq__58000_58239 = G__58246;\nchunk__58001_58240 = G__58247;\ncount__58002_58241 = G__58248;\ni__58003_58242 = G__58249;\ncontinue;\n} else {\nvar temp__5753__auto___58250 = cljs.core.seq(seq__58000_58239);\nif(temp__5753__auto___58250){\nvar seq__58000_58252__$1 = temp__5753__auto___58250;\nif(cljs.core.chunked_seq_QMARK_(seq__58000_58252__$1)){\nvar c__4638__auto___58253 = cljs.core.chunk_first(seq__58000_58252__$1);\nvar G__58254 = cljs.core.chunk_rest(seq__58000_58252__$1);\nvar G__58255 = c__4638__auto___58253;\nvar G__58256 = cljs.core.count(c__4638__auto___58253);\nvar G__58257 = (0);\nseq__58000_58239 = G__58254;\nchunk__58001_58240 = G__58255;\ncount__58002_58241 = G__58256;\ni__58003_58242 = G__58257;\ncontinue;\n} else {\nvar i_58258 = cljs.core.first(seq__58000_58252__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_58258);\n\n\nvar G__58260 = cljs.core.next(seq__58000_58252__$1);\nvar G__58261 = null;\nvar G__58262 = (0);\nvar G__58263 = (0);\nseq__58000_58239 = G__58260;\nchunk__58001_58240 = G__58261;\ncount__58002_58241 = G__58262;\ni__58003_58242 = G__58263;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__58020 = cljs.core.seq(extra_to_force);\nvar chunk__58021 = null;\nvar count__58022 = (0);\nvar i__58023 = (0);\nwhile(true){\nif((i__58023 < count__58022)){\nvar c = chunk__58021.cljs$core$IIndexed$_nth$arity$2(null,i__58023);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c),c);\n\n\nvar G__58267 = seq__58020;\nvar G__58268 = chunk__58021;\nvar G__58269 = count__58022;\nvar G__58270 = (i__58023 + (1));\nseq__58020 = G__58267;\nchunk__58021 = G__58268;\ncount__58022 = G__58269;\ni__58023 = G__58270;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__58020);\nif(temp__5753__auto__){\nvar seq__58020__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__58020__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__58020__$1);\nvar G__58272 = cljs.core.chunk_rest(seq__58020__$1);\nvar G__58273 = c__4638__auto__;\nvar G__58274 = cljs.core.count(c__4638__auto__);\nvar G__58275 = (0);\nseq__58020 = G__58272;\nchunk__58021 = G__58273;\ncount__58022 = G__58274;\ni__58023 = G__58275;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__58020__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c),c);\n\n\nvar G__58282 = cljs.core.next(seq__58020__$1);\nvar G__58283 = null;\nvar G__58284 = (0);\nvar G__58285 = (0);\nseq__58020 = G__58282;\nchunk__58021 = G__58283;\ncount__58022 = G__58284;\ni__58023 = G__58285;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n *   it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n *   data that has changed.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_BANG_(var_args){\nvar G__58046 = arguments.length;\nswitch (G__58046) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__58049){\nvar map__58050 = p__58049;\nvar map__58050__$1 = cljs.core.__destructure_map(map__58050);\nvar options = map__58050__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58050__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58050__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__4212__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_(app__$1);\n}catch (e58051){var e = e58051;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,146,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n}),null)),null,2111455673);\n\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n}}\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","~:file","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",60],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^Q","~$log","~$taoensso.timbre","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^Q","~$com.fulcrologic.fulcro.algorithms.denormalize","^Y","~$cljs.core","^Z","~$goog","^[","^P","^P","^U","^U","^W","^W","^S","^S","~$fdn","^Y"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:form",["~#list",["~$ns","^I","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).",["^16",["^12",["^U","~:as","^T"],["^Y","^18","^10"],["^W","^18","^V"],["^P","^18","^O"],["^Q","^18","^X"],["^S","^18","^R"]]]]],"~:flags",["^ ","^12",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],"~:compiled-at",1636231109320,"^J",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"~:resource-name","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.ident-optimized-render\n  \"A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).\"\n  (:require\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.components :as comp]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defn dirty-table-entries\n  \"Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`.\"\n  [old-state new-state idents]\n  (reduce\n    (fn [result ident]\n      (if (identical? (get-in old-state ident) (get-in new-state ident))\n        result\n        (cons ident result)))\n    (list)\n    idents))\n\n(defn render-component!\n  \"Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \\\"props tunnelling\\\" (setting them on a well-known key in\n  component-local state).\"\n  [app ident c]\n  #?(:cljs\n     (if (and c ident)\n       (let [{:com.fulcrologic.fulcro.application/keys [state-atom]} app\n             state-map      @state-atom\n             query          (comp/get-query c state-map)\n             q              [{ident query}]\n             prior-computed (or (comp/get-computed c) {})\n             data-tree      (when query (fdn/db->tree q state-map state-map)) ; denormalize time is set by app render\n             new-props      (comp/computed (get data-tree ident) prior-computed)]\n         (when-not query (log/error \"Query was empty. Refresh failed for \" (type c)))\n         (comp/tunnel-props! c new-props))\n       (let [root (-> app :com.fulcrologic.fulcro.application/runtime-atom deref :com.fulcrologic.fulcro.application/app-root)]\n         (when (not= c root)\n           (log/info \"Failed to do optimized update. Component\" (-> c comp/react-type (comp/class->registry-key))\n             \"queries for data that changed, but does not have an ident.\"))\n         (throw (ex-info \"Targeted update failed\" {}))))))\n\n(defn render-components-with-ident!\n  \"Renders *only* components that *have* the given ident.\"\n  [app ident]\n  (doseq [c (comp/ident->components app ident)]\n    (render-component! app ident c)))\n\n(defn render-dependents-of-ident!\n  \"Renders components that have, or query for, the given ident.\"\n  [app ident]\n  (render-components-with-ident! app ident)\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n        {:keys [prop->classes idents-in-joins class->components]} indexes\n        idents-in-joins (or idents-in-joins #{})]\n    (when (contains? idents-in-joins ident)\n      (let [classes (prop->classes ident)]\n        (when (seq classes)\n          (doseq [class classes]\n            (doseq [component (class->components class)\n                    :let [component-ident (comp/get-ident component)]]\n              (render-component! app component-ident component))))))))\n\n(defn props->components\n  \"Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key.\"\n  [app property-set]\n  (when (seq property-set)\n    (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n          {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n          {:keys [prop->classes class->components]} indexes]\n      (reduce\n        (fn [result prop]\n          (let [classes    (prop->classes prop)\n                components (reduce #(into %1 (class->components %2)) #{} classes)]\n            (into result components)))\n        #{}\n        property-set))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom state-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes last-rendered-state\n                                                   to-refresh only-refresh]} @runtime-atom\n        {:keys [linked-props ident->components prop->classes idents-in-joins]} indexes\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true\n             limited-props  false} (group-by eql/ident? only-refresh)\n            limited-to-render (props->components app limited-props)]\n        (doseq [c limited-to-render\n                :let [ident (comp/get-ident c)]]\n          (render-component! app ident c))\n        (doseq [i limited-idents]\n          (render-dependents-of-ident! app i)))\n      (let [state-map          @state-atom\n            idents-in-joins    (or idents-in-joins #{})\n            dirty-linked-props (reduce\n                                 (fn [acc p]\n                                   (if (not (identical?\n                                              (get state-map p)\n                                              (get last-rendered-state p)))\n                                     (conj acc p)\n                                     acc))\n                                 #{}\n                                 linked-props)\n            {idents-to-force true\n             props-to-force  false} (group-by eql/ident? to-refresh)\n            props-to-force     (set/union props-to-force dirty-linked-props)\n            mounted-idents     (concat (keys ident->components) idents-in-joins)\n            stale-idents       (dirty-table-entries last-rendered-state state-map mounted-idents)\n            extra-to-force     (props->components app props-to-force)\n            all-idents         (set/union (set idents-to-force) (set stale-idents))]\n        (doseq [i all-idents]\n          (render-dependents-of-ident! app i))\n        (doseq [c extra-to-force]\n          (render-component! app (comp/get-ident c) c))))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (kr/render! app options)\n     (try\n       (render-stale-components! app)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (kr/render! app options))))))\n\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","old-state","new-state","idents","cljs.core.reduce","result","ident","cljs.core.get_in","cljs.core/cons","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","app","c","and__4210__auto__","map__57733","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","state-atom","state-map","query","com.fulcrologic.fulcro.components.get_query","q","prior-computed","or__4212__auto__","com.fulcrologic.fulcro.components.get_computed","data-tree","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","new-props","com.fulcrologic.fulcro.components/computed","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/type","com.fulcrologic.fulcro.components/tunnel-props!","root","cljs.core.not_EQ_","com.fulcrologic.fulcro.components/react-type","com.fulcrologic.fulcro.components/class->registry-key","cljs.core.ex_info","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","seq__57754","cljs.core/seq","chunk__57755","count__57756","i__57757","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","com.fulcrologic.fulcro.components/ident->components","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!","map__57775","map__57776","map__57778","runtime-atom","indexes","prop->classes","idents-in-joins","class->components","cljs.core/contains?","classes","seq__57788","chunk__57789","count__57790","i__57791","class","seq__57840","chunk__57842","count__57843","i__57844","seq__57855","chunk__57857","count__57858","i__57859","component","component-ident","com.fulcrologic.fulcro.components.get_ident","com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","property-set","map__57881","map__57882","map__57883","prop","components","p1__57875#","p2__57876#","cljs.core.into","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","map__57897","map__57898","map__57899","last-rendered-state","to-refresh","only-refresh","linked-props","ident->components","limited-refresh?","map__57907","limited-idents","limited-props","cljs.core/group-by","edn-query-language.core/ident?","limited-to-render","seq__57911","chunk__57913","count__57914","i__57915","seq__57942","chunk__57943","count__57944","i__57945","i","map__57967","dirty-linked-props","acc","p","cljs.core.conj","idents-to-force","props-to-force","clojure.set.union","mounted-idents","cljs.core.concat","cljs.core/keys","stale-idents","extra-to-force","all-idents","cljs.core/set","seq__58000","chunk__58001","count__58002","i__58003","seq__58020","chunk__58021","count__58022","i__58023","var_args","G__58046","com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","js/Error","p__58049","map__58050","com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_","force-root?","root-props-changed?","options","com.fulcrologic.fulcro.rendering.keyframe-render/render!","e58051","e","cljs.core/List"]],"~:used-vars",["^G",["~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$com.fulcrologic.fulcro.components/computed","~$cljs.core/keys","~$taoensso.timbre/-log!","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.components/react-type","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$cljs.core/not=","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","~$cljs.core/concat","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","~$cljs.core/set","~$cljs.core/contains?","~$cljs.core/into","~$com.fulcrologic.fulcro.components/get-ident","~$cljs.core/conj","~$taoensso.timbre/*config*","~$com.fulcrologic.fulcro.components/ident->components","~$cljs.core/get-in","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$com.fulcrologic.fulcro.algorithms.denormalize/db->tree","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.components/tunnel-props!","~$com.fulcrologic.fulcro.components/get-computed","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$com.fulcrologic.fulcro.components/get-query","~$cljs.core/not","~$cljs.core/cons","~$clojure.set/union","~$com.fulcrologic.fulcro.components/class->registry-key","~$cljs.core/first","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!"]]],"~:cache-keys",["~#cmap",[["^1=","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^[","~$goog.dom.HtmlElement"]]],["^1=","goog/async/freelist.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.labs.userAgent.util","~$goog.string"]]],["^1=","expound/util.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","goog/crypt/crypt.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.array","~$goog.asserts"]]],["^1=","goog/timer/timer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1=","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^S"]]],["^1=","cljs/spec/gen/alpha.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$goog.Uri"]]],["^1=","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$clojure.string","^2V"]]],["^1=","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X"]]],["^1=","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/string/stringformat.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2V"]]],["^1=","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1=","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2U","~$goog.object","~$goog.string.internal"]]],["^1=","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^35"]]],["^1=","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X"]]],["^1=","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^S","^31","^Q","^34","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1=","expound/problems.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$expound.paths","^@"]]],["^1=","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2U","~$goog.reflect","^2V"]]],["^1=","goog/structs/prioritypool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1=","goog/async/run.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1=","taoensso/encore.cljs"],["19e6b7df8d479139a889d03eb0612d0b7a326998","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^P","~$cljs.reader","~$cljs.tools.reader.edn","^34","^2V","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1=","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/async/workqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.async.FreeList"]]],["^1=","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^32","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1=","goog/promise/resolver.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2Y"]]],["^1=","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^33"]]],["^1=","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2V","^3K"]]],["^1=","goog/structs/priorityqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.structs.Heap"]]],["^1=","goog/net/xhrio.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.Timer","^2W","^2X","^3T","^2Z","~$goog.json.hybrid","~$goog.log","^3Q","^3P","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^34","^2V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^33","^30","^3X","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1=","goog/promise/thenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2Y"]]],["^1=","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","cljs/pprint.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^2V","^3K"]]],["^1=","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^43","^44","^45","^42","^2W","^2V","^3K"]]],["^1=","expound/alpha.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$expound.problems","^@","^31","^P","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1=","goog/net/wrapperxmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4@","^4A"]]],["^1=","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.Disposable","^2X","^3L","~$goog.events.Event","^3V","^3W","^34","^3Y","^3Z","^40"]]],["^1=","com/fulcrologic/guardrails/core.cljc"],["fea1142983ea044a9d4139a04fb7599e98df5174","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^S","^@","~$expound.alpha"]]],["^1=","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.disposable.IDisposable"]]],["^1=","expound/ansi.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31"]]],["^1=","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2P",["^ ","^2Q",3,"^2R",["^G",[1,2]],"^2S",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1=","shadow/js.js"],["0273d29a26c6414d6326ed34664dcb7e98415b06","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X"]]],["^1=","goog/structs/set.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4=","~$goog.structs.Collection","^4>","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1635907472000,1635907472000,1635907547000],["^4J","node_modules/react/cjs/react.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","754b7a48941975257c8955f6d5e511cb3a878737","^2P",["^ ","^2Q",2,"^2R",["^G",[0]],"^2S",["^4K","~$module$node_modules$object_assign$index"]]],["^1=","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^3B"]]],["^1=","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^40","^3V"]]],["^1=","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.fs.blob","^36","~$goog.html.SafeScript","~$goog.html.trustedtypes","^38","^39","^3:","^3;"]]],["^1=","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.debug","~$goog.debug.Logger","~$goog.iter","^4:","^4>","~$goog.structs.SimplePool"]]],["^1=","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^41","^34","^3Y","^3V","^40"]]],["^1=","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","taoensso/truss.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","~$taoensso.truss.impl"]]],["^1=","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1=","edn_query_language/core.cljc"],["89cd2ff9787f6dfcb81506253473dfa9b27d718a","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^@"]]],["^1=","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.html.SafeUrl","^3:","^3;","^35"]]],["^1=","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4S","~$goog.html.SafeStyle","^50","^37","~$goog.html.uncheckedconversions","^3:","^35"]]],["^1=","expound/paths.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^@","^4D"]]],["^1=","taoensso/truss/impl.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^P"]]],["^1=","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","goog/useragent/product.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3?","^3A","^33"]]],["^1=","goog/net/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4O","~$goog.iter.StopIteration"]]],["^1=","goog/net/xhriopool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3M","~$goog.structs.PriorityPool","^4>"]]],["^1=","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.dom.TagName","~$goog.dom.tags","^4S","^54","~$goog.html.SafeStyleSheet","^50","^37","^4T","^38","^39","^3?","^34","^3:","^3;","^35"]]],["^1=","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^34"]]],["^1=","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/queue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W"]]],["^1=","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2U","^2V"]]],["^1=","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W"]]],["^1=","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","~$taoensso.encore"]]],["^1=","cljs/reader.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^34","^46","^3I","^3K"]]],["^1=","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^58","~$goog.dom.safe","^53","^55","~$goog.math.Coordinate","~$goog.math.Size","^34","^2V","^3:","~$goog.string.Unicode","^33"]]],["^1=","com/fulcrologic/fulcro/components.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^34","~$cljsjs.react","^Q","^@","^S","^5;","~$clojure.walk","^31","~$com.fulcrologic.fulcro.algorithms.do-not-use","^Y","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.guardrails.core","^P"]]],["^1=","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.debug.Error","^5="]]],["^1=","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","^2V","^4=","^4>","^4?","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/net/errorcode.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^4J","node_modules/object-assign/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","519ffd5a4c91b67302cc9947b794966d629860cd","^2P",["^ ","^2Q",0,"^2R",["^G",[]],"^2S",["^4K"]]],["^1=","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","^2X","^4U","~$goog.debug.EntryPointMonitor","^5G","~$goog.debug.Trace"]]],["^1=","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/promise/promise.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2[","^2X","^3S","~$goog.async.run","^3G","^5G","~$goog.promise.Resolver"]]],["^1=","cljs/spec/alpha.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^34","^5C","~$cljs.spec.gen.alpha","^31"]]],["^1=","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",[]]],["^1=","goog/json/hybrid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.json"]]],["^1=","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^34"]]],["^1=","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^43","^31","~$cljs.tools.reader.impl.inspect"]]],["^1=","cljsjs/react.cljs"],["4323f8e603a952cae34c4c6db04141e97928434f","^2P",["^ ","^2Q",null,"^2R",["^G",[3]],"^2S",["^[","^Z","~$module$node_modules$react$index"]]],["^1=","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^2V","^3K"]]],["^1=","goog/structs/pool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","~$goog.structs.Queue","~$goog.structs.Set"]]],["^4J","node_modules/react/cjs/react.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","0a81b45abe33f0ad39b726512604018f94261db9","^2P",["^ ","^2Q",1,"^2R",["^G",[0]],"^2S",["^4K","^4Q"]]],["^1=","goog/net/httpstatus.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/heap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^34","~$goog.structs.Node"]]],["^1=","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X"]]],["^1=","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^5>","^55","^3:","^35"]]],["^1=","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^Y","^5E","^W"]]],["^1=","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^35"]]],["^1=","expound/printer.cljc"],["f84ecd45aeef38fd6f1c53d8323e6abc5dc5a0e4","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^@","^B","^P","^4D","^4E","^3>","^5C","^3J","^2V"]]],["^1=","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","~$goog.debug.errorcontext","^33"]]],["^1=","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.math"]]],["^1=","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^44","^2V","^3K"]]],["^1=","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2W","^2X","^52","^5V"]]],["^1=","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3T","~$goog.dom","^58","^52","^3?","^3@"]]],["^1=","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^53","^4S","^54","^5:","^50","^37","^3:","^35","^38"]]],["^1=","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4U","^4:","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^1=","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","^3Y"]]],["^1=","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^42","^43","^44"]]],["^1=","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F","^3L","^34","^4G","^3Y","^2Z","^3["]]],["^1=","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","~$goog.math.Long","~$goog.math.Integer","^2V","^34","^2W","^30","^3K"]]],["^1=","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3:","^3;","^4T","^2X"]]],["^1=","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^4U"]]],["^1=","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3:","^54","^3;","^2W","^34","^2X","^35"]]],["^1=","goog/structs/collection.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4U","^32","^4G","~$goog.events.EventType","^3B","^33"]]],["^1=","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3B"]]],["^1=","goog/structs/node.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4F"]]],["^1=","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^33"]]],["^1=","clojure/set.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z"]]],["^1=","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^2V"]]],["^1=","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^3;"]]],["^1=","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^31","^5;","~$taoensso.timbre.appenders.core"]]],["^1=","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]]],["^1=","goog/json/json.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^3Y","^3Z"]]],["^1=","goog/net/xmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^4@"]]],["^1=","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["1caf5ece14d08c1a1f2d6dbda6366e56e941c356","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^Z","^S","^P","^Q"]]],["^1=","goog/net/xmlhttp.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","~$goog.net.WrapperXmlHttpFactory","^4A","^4@"]]],["^1=","goog/net/xhrlike.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^["]]],["^1=","goog/crypt/base64.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2P",["^ ","^2Q",null,"^2R",["^G",[]],"^2S",["^[","^2X","^3<","^2V","^33","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/pprint.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1617990988000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/alpha.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/problems.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1617990988000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1635907473000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/core.cljc",1635907473000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/spec/alpha.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/utils.cljc",1635907473000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1635907473000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/edn-query-language/eql/1.0.0/eql-1.0.0.jar!/edn_query_language/core.cljc",1635907473000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/encore/2.120.0/encore-2.120.0.jar!/taoensso/encore.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/ansi.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/util.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/reader.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1635907474000,"jar:file:/Users/nitin/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/fulcro/3.4.14/fulcro-3.4.14.jar!/com/fulcrologic/fulcro/components.cljc",1635907474000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1617991017000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/spec/gen/alpha.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1635907472000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/paths.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/expound/expound/0.8.9/expound-0.8.9.jar!/expound/printer.cljc",1621233320000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1635907547000,"jar:file:/Users/nitin/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1635907547000,"jar:file:/Users/nitin/.m2/repository/com/fulcrologic/guardrails/0.0.12/guardrails-0.0.12.jar!/com/fulcrologic/guardrails/config.cljc",1635907473000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",1,"^9",5,"^:",1,"^;",60],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",[]],"^H","^I","^J",["^ "],"^M",null,"^N",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"^11",["^G",["^12"]],"~:shadow/js-access-global",["^G",["Error"]],"^13",null,"~:defs",["^ ","~$dirty-table-entries",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",16,"^9",7,"^:",16,"^;",26,"~:arglists",["^16",["~$quote",["^16",[["~$old-state","~$new-state","~$idents"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"^H","^1[","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",26,"~:method-params",["^16",[["^7N","^7O","^7P"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^9",1,"~:variadic?",false,"^8",16,"~:ret-tag",["^G",[null,"~$any"]],"^:",16,"~:max-fixed-arity",3,"~:fn-var",true,"^7L",["^16",["^7M",["^16",[["^7N","^7O","^7P"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"~$render-component!",["^ ","^7K",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",28,"^9",7,"^:",28,"^;",24,"^7L",["^16",["^7M",["^16",[["~$app","~$ident","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"^H","^1J","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^7Q",["^16",[["^7Z","^7[","~$c"]]],"^7R",null,"^7S",["^16",[null,null]],"^9",1,"^7T",false,"^8",28,"^7U",["^G",["~$js","~$clj-nil"]],"^:",28,"^7W",3,"^7X",true,"^7L",["^16",["^7M",["^16",[["^7Z","^7[","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"~$render-components-with-ident!",["^ ","^7K",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",50,"^9",7,"^:",50,"^;",36,"^7L",["^16",["^7M",["^16",[["^7Z","^7["]]]]],"^6","Renders *only* components that *have* the given ident."],"^H","^1L","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",36,"^7Q",["^16",[["^7Z","^7["]]],"^7R",null,"^7S",["^16",[null,null]],"^9",1,"^7T",false,"^8",50,"^7U","^81","^:",50,"^7W",2,"^7X",true,"^7L",["^16",["^7M",["^16",[["^7Z","^7["]]]]],"^6","Renders *only* components that *have* the given ident."],"~$render-dependents-of-ident!",["^ ","^7K",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",56,"^9",7,"^:",56,"^;",34,"^7L",["^16",["^7M",["^16",[["^7Z","^7["]]]]],"^6","Renders components that have, or query for, the given ident."],"^H","^2M","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",34,"^7Q",["^16",[["^7Z","^7["]]],"^7R",null,"^7S",["^16",[null,null]],"^9",1,"^7T",false,"^8",56,"^7U","^81","^:",56,"^7W",2,"^7X",true,"^7L",["^16",["^7M",["^16",[["^7Z","^7["]]]]],"^6","Renders components that have, or query for, the given ident."],"~$props->components",["^ ","^7K",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^7L",["^16",["^7M",["^16",[["^7Z","~$property-set"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"^H","^1K","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^7Q",["^16",[["^7Z","^85"]]],"^7R",null,"^7S",["^16",[null,null]],"^9",1,"^7T",false,"^8",72,"^7U",["^G",[null,"^7V","^81"]],"^:",72,"^7W",2,"^7X",true,"^7L",["^16",["^7M",["^16",[["^7Z","^85"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"~$render-stale-components!",["^ ","^7K",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",90,"^9",7,"^:",90,"^;",31,"^7L",["^16",["^7M",["^16",[["^7Z"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^H","^21","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",31,"^7Q",["^16",[["^7Z"]]],"^7R",null,"^7S",["^16",[null,null]],"^9",1,"^7T",false,"^8",90,"^7U","^81","^:",90,"^7W",1,"^7X",true,"^7L",["^16",["^7M",["^16",[["^7Z"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^7K",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^7L",["^16",["^7M",["^16",[["^7Z"],["^7Z",["^ ","~:keys",["~$force-root?","~$root-props-changed?"],"^18","~$options"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.","~:top-fn",["^ ","^7T",false,"~:fixed-arity",2,"^7W",2,"^7Q",[["^7Z"],["^7Z",["^ ","^88",["^89","^8:"],"^18","^8;"]]],"^7L",["^16",[["^7Z"],["^7Z",["^ ","^88",["^89","^8:"],"^18","^8;"]]]],"^7S",["^16",[null,null]]]],"^H","^2>","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",14,"^8<",["^ ","^7T",false,"^8=",2,"^7W",2,"^7Q",[["^7Z"],["^7Z",["^ ","^88",["^89","^8:"],"^18","^8;"]]],"^7L",["^16",[["^7Z"],["^7Z",["^ ","^88",["^89","^8:"],"^18","^8;"]]]],"^7S",["^16",[null,null]]],"^7Q",[["^7Z"],["^7Z",["^ ","^88",["^89","^8:"],"^18","^8;"]]],"^7R",null,"^8=",2,"^7S",["^16",[null,null]],"^9",1,"^7T",false,"~:methods",[["^ ","^8=",1,"^7T",false,"~:tag","^7V"],["^ ","^8=",2,"^7T",false,"^8?",["^G",[null,"^7V"]]]],"^8",132,"^:",132,"^7W",2,"^7X",true,"^7L",["^16",[["^7Z"],["^7Z",["^ ","^88",["^89","^8:"],"^18","^8;"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed."]],"^14",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:com.fulcrologic.fulcro.application/indexes","~:com.fulcrologic.fulcro.application/last-rendered-state","~:idents-in-joins","~:prop->classes","~:force-root?","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:class->components","~:com.fulcrologic.fulcro.application/to-refresh","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p","~:com.fulcrologic.fulcro.application/app-root"]],"~:order",["^8F","^8M","~:p","^8P","^8Q","^8K","^8L","^8A","^8D","^8C","^8H","^8B","^8I","^8G","^8O","^8N","^8E","^8J"]],"^19",["^ ","^12",["^G",[]]],"^1:",["^ "],"^1;",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^2O",[["^8U","~:static-fns"],true,["^8U","~:shadow-tweaks"],null,["^8U","~:source-map-inline"],null,["^8U","~:elide-asserts"],true,["^8U","~:optimize-constants"],null,["^8U","^1@"],null,["^8U","~:external-config"],null,["^8U","~:tooling-config"],null,["^8U","~:emit-constants"],null,["^8U","~:load-tests"],false,["^8U","~:form-size-threshold"],null,["^8U","~:data-readers"],null,["^8U","~:infer-externs"],"^8P",["^8U","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^8U","~:fn-invoke-direct"],null,["^8U","~:source-map"],null]]]